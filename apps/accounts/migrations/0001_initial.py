# Generated by Django 3.1.7 on 2021-05-22 01:08

from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=60, verbose_name='Nombres')),
                ('last_name', models.CharField(max_length=60, verbose_name='Apellidos')),
                ('email', models.EmailField(max_length=50, unique=True, verbose_name='correo del usuario')),
                ('contact_email', models.EmailField(blank=True, max_length=30, null=True, verbose_name='correo del padre de familia')),
                ('birthday_date', models.DateField(verbose_name='fecha de nacimiento')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='users/pictures')),
                ('username', models.CharField(error_messages={'unique': 'Ya existe un usuario con este nombre de usuario.'}, help_text='Su usuario debe tener maximo 15 caracteres. Letras, dígitos y @/./+/-/_ solamente.', max_length=15, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='usuario')),
                ('type_user', models.CharField(choices=[('ADMIN', 'Administrador'), ('TCHR', 'Docente'), ('STDT', 'Estudiante'), ('IVT', 'Invitado')], default='STDT', max_length=10, verbose_name='tipo de usuario')),
                ('is_active', models.BooleanField(default=True, help_text='Indica que la cuenta del usuario está activa.', verbose_name='activo')),
                ('is_staff', models.BooleanField(default=False, help_text='Designa si este usuario puede acceder al sitio de administración.', verbose_name='login en admin')),
                ('terms', models.BooleanField(verbose_name='terminos y condiciones')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='fecha de registro')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'usuario',
                'verbose_name_plural': 'usuarios',
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('log_id', models.AutoField(primary_key=True, serialize=False)),
                ('log_name', models.CharField(max_length=30, verbose_name='nombre del reporte')),
                ('date_conection', models.DateField(auto_now_add=True)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'iniciar sesion',
                'verbose_name_plural': 'iniciar sesion',
                'db_table': 'log',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('location_id', models.AutoField(primary_key=True, serialize=False)),
                ('location_name', models.CharField(max_length=120, verbose_name='nombre de la ubicación')),
                ('location_type', models.CharField(max_length=30, verbose_name='Tipo de ubicación')),
                ('location_father', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='location', to='accounts.location')),
            ],
            options={
                'verbose_name': 'ubicacion',
                'verbose_name_plural': 'ubicaciones',
                'db_table': 'location',
            },
        ),
    ]
